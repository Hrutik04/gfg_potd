/*

Remove Duplicates

Given a string str without spaces, the task is to remove all duplicate characters from it, keeping only the first occurrence.

Note: The original order of characters must be kept the same. 

Examples :

Input: str = "zvvo"
Output: "zvo"
Explanation: Only keep the first occurrence

Input: str = "gfg"
Output: "gf"
Explanation: Only keep the first occurrence

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= |str| <= 105
str contains lowercase English alphabets

*/



class Solution {
  public:

    string removeDups(string str) {
        int arr[26] = {0};  // Array to track presence of characters
        int j = 0;  // Pointer for position in the result string

        for (int i = 0; i < str.size(); i++) {
            if (arr[str[i] - 'a'] == 0) {
                str[j++] = str[i];
            }
            arr[str[i] - 'a'] = 1;
        }

        return str.substr(0, j);  // Return the result substring
    }
};